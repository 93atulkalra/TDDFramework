package smoke;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Map.Entry;
import java.util.Set;

/*
 * 
 * Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.
 * Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false

 */

public class Question {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		int arr []= {-3,0,1,-3,1,1,1,-3,0,0,0,0,2};
		HashMap<Integer,Integer> hp = new HashMap();
		
		for(int i=0;i<arr.length;i++)
		{
		if(!hp.containsKey(arr[i]))
			hp.put(arr[i],1);
		
		else
			hp.put(arr[i], (hp.get(arr[i]))+1);
		} // for ends
		
		System.out.print(hp);
		
		Set<Entry<Integer,Integer>> entrySet = hp.entrySet();
		
		Collection key=hp.values();
		LinkedList s = new LinkedList(key);
		System.out.print(s);
		
//		if(hp.size()!=s.size())
//			
//			System.out.print("true");
//		else
//			System.out.print("false");

		
		boolean flag = true;
	for(int i=0;i<s.size();i++)
	{
		for(int j=0;j<s.size();j++)
		{
			
			if(i!=j)
			{
				if(s.get(i)==s.get(j))
				{
					 flag = false;
					 break;
				}
			}
		}
	}
	System.out.print(flag);
		
	}

}
